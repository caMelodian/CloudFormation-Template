Parameters:
  KeyName:
    Description: Name of SSH access Key
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  LatestAmiId:
    Description: (DO NOT CHANGE)
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
    AllowedValues:
      - /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

Resources:
#VPC
  AWSVPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: AWS-VPC
#IGW
  AWSIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: AWS-IGW
#VPC-IGW
  IGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref AWSIGW
      VpcId: !Ref AWSVPC
#PublicRT
  AWSPublicRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref AWSVPC
      Tags:
        - Key: Name
          Value: AWS-Public-RT
#Route
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: IGWAttachment
    Properties:
      RouteTableId: !Ref AWSPublicRT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref AWSIGW
#PublicSN
  AWSVPCSN1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AWSVPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
      - Key: Name
        Value: AWS-VPC-SN1
#PublicSN-Route
  CloudNetaPublicSNRouteTableAssociations:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref AWSVPCSN1
      RouteTableId: !Ref AWSPublicRT
#SG
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access via port 80 and SSH access via port 22
      VpcId: !Ref AWSVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: icmp
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: SecurityGroup
#PublicEC2
  AWSEC2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: Server-EC2-1
      NetworkInterfaces:
        - DeviceIndex: 0
          SubnetId: !Ref AWSVPCSN1
          GroupSet:
          - !Ref SecurityGroup
          AssociatePublicIpAddress: true
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            amazon-linux-extras install epel -y
            hostnamectl --static set-hostname Server-EC2
            yum install -y httpd
            systemctl enable httpd
            systemctl start httpd
            echo "<h1>Server-EC2 Web Server</h1>" > /var/www/html/index.html

  AWSEC2second:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: Server-EC2-2
      NetworkInterfaces:
        - DeviceIndex: 0
          SubnetId: !Ref AWSVPCSN1
          GroupSet:
          - !Ref SecurityGroup
          AssociatePublicIpAddress: true
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            amazon-linux-extras install epel -y
            hostnamectl --static set-hostname Server-EC2-2
            yum install -y httpd
            systemctl enable httpd
            systemctl start httpd
            echo "<h1>Server-EC2-2 Web Server</h1>" > /var/www/html/index.html
